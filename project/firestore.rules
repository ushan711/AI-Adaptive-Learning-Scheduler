rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      // Deny creation or deletion of user profiles via these rules.
      // Creation should be handled by backend functions securely.
      allow create, delete: if false;
    }

    // Users can manage their own subjects.
    match /subjects/{subjectId} {
      allow read, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Users can manage their own schedules.
    match /schedules/{scheduleId} {
      allow read, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Users can manage sessions within their own schedules.
    // This assumes session documents contain a `userId` field.
    match /sessions/{sessionId} {
      allow read, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Users can submit and read their own feedback.
    match /feedback/{feedbackId} {
      allow read, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Generally, feedback should be immutable.
      allow update, delete: if false;
    }

    // Analytics reports should only be readable by the user they belong to.
    // Generation should be handled by trusted backend functions.
    match /analytics/{reportId} {
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
        allow create, update, delete: if false;
    }

    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
